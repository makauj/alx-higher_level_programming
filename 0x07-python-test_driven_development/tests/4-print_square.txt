How to Use 4-print_square.py
============================

This module defines the function ``print_square(size)``. It prints squares.

Usage
=====
The function prints `Squares` using "#".
`size` represents both height and width of the square

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

::

    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

::

    >>> print_square(8)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########

::

    >>> print_square(2)
    ##
    ##

If ``size`` is zero, print nothing.

::

    >>> print_square(0)

Invalid Sizes
=============

The parameter ``size`` must be an integer. Otherwise, raise a TypeError.

::

    >>> print_square("not an int")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(5.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

If ``size`` is less than zero, raise a ValueError.

::

    >>> print_square(-7)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Note: type-checking occurs before value-checking.

::

    >>> print_square(-7.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

At least one argument must be provided.

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'